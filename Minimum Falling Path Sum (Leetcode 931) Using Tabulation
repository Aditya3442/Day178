class Solution {
    public int minFallingPathSum(int[][] matrix) {
        int n = matrix.length;
        int m = matrix[0].length;
        int dp[][] = new int[n][m];
        int mini = Integer.MAX_VALUE;       
        for(int i = n - 1 ; i >= 0; i--){
            for(int j = 0; j < m; j++){
                if(i == n - 1){
                    dp[i][j] = matrix[i][j];
                    continue;
                }
                int leftDown = (j >= 1) ? dp[i + 1][j - 1] : Integer.MAX_VALUE;
                int down = dp[i + 1][j];
                int rightDown = (j + 1 < m) ? dp[i + 1][j + 1] : Integer.MAX_VALUE;

                dp[i][j] = matrix[i][j] + Math.min(leftDown , Math.min(down , rightDown));
            }
        }
        for(int i = 0; i < m; i++){
            mini = Math.min(mini , dp[0][i]);
        }
        return mini;
    }
}
